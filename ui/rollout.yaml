apiVersion: v1
kind: List
items:
- apiVersion: v1
  kind: Service
  metadata:
    name: rollout-albumui-active
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: rollout-albumui
- apiVersion: v1
  kind: Service
  metadata:
    name: rollout-albumui-preview
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      app: rollout-albumui
    
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: albumui
      app.kubernetes.io/component: albumui
      app.kubernetes.io/instance: albumu
    name: albumui
  spec:
    port:
      targetPort: 3000-tcp
    to:
      kind: Service
      name: rollout-albumui-active
      weight: 100
  status: {}
- apiVersion: argoproj.io/v1alpha1
  kind: Rollout
  metadata:
    name: rollout-albumui
  spec:
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: rollout-albumui
    template:
      metadata:
        labels:
          app: rollout-albumui
      spec:
        containers:
        - name: rollout-albumui
          image: 'image-registry.openshift-image-registry.svc:5000/bgdemo/albumui:green'
          imagePullPolicy: Always
          ports:
          - containerPort: 3000
          env:
            - name: API_BASE_URL
              value: 'http://rollout-albumapi-active:3500'          
    strategy:
      blueGreen: 
        # activeService specifies the service to update with the new template hash at time of promotion.
        # This field is mandatory for the blueGreen update strategy.
        activeService: rollout-albumui-active
        # previewService specifies the service to update with the new template hash before promotion.
        # This allows the preview stack to be reachable without serving production traffic.
        # This field is optional.
        previewService: rollout-albumui-preview
        # autoPromotionEnabled disables automated promotion of the new stack by pausing the rollout
        # immediately before the promotion. If omitted, the default behavior is to promote the new
        # stack as soon as the ReplicaSet are completely ready/available.
        # Rollouts can be resumed using: `kubectl argo rollouts promote ROLLOUT`
        autoPromotionEnabled: true
